generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model smtp_configuration {
  idsmtp_configuration Int       @id @default(autoincrement())
  host                 String?   @db.Text
  port                 String?   @db.Text
  secure               String?   @db.Text
  user                 String?   @db.Text
  password             String?   @db.Text
  status               Int?
  created_at           DateTime? @default(now()) @db.DateTime(0)
  updated_at           DateTime? @default(now()) @db.DateTime(0)
}

model mails {
  idmails       Int             @id @default(autoincrement())
  from          String?         @db.Text
  to            String?         @db.Text
  subject       String?         @db.Text
  html          String?         @db.Text
  status        Int?
  created_at    DateTime?       @default(now()) @db.DateTime(0)
  updated_at    DateTime?       @default(now()) @db.DateTime(0)
  mail_schedule mail_schedule[]
}

model mail_schedule {
  idmail_schedule Int       @id @default(autoincrement())
  day             String?   @db.Text
  time            String?   @db.Text
  status          Int?
  created_at      DateTime? @default(now()) @db.DateTime(0)
  updated_at      DateTime? @default(now()) @db.DateTime(0)
  idmails         Int
  mails           mails     @relation(fields: [idmails], references: [idmails], onDelete: NoAction, onUpdate: NoAction, map: "FK_mail_schedule_mails")

  @@index([idmails], map: "FK_mail_schedule_mails")
}

model anios {
  idanios    Int       @id @default(autoincrement())
  nombre     String?   @db.VarChar(45)
  status     Int?
  created_at DateTime? @default(now()) @db.DateTime(0)
  updated_at DateTime? @db.DateTime(0)
  modelos    modelos[]
}

model modelos {
  idmodelos          Int                  @id @default(autoincrement())
  idanios            Int?
  nombre             String?              @db.Text
  frase              String?              @db.Text
  imagen             String?              @db.Text
  url                String?              @db.LongText
  pdf                String?              @db.LongText
  status             Int?
  orden              Int?
  created_at         DateTime?            @default(now()) @db.DateTime(0)
  updated_at         DateTime?            @default(now()) @db.DateTime(0)
  slug               String?              @unique(map: "slug_UNIQUE") @db.VarChar(500)
  urlAccesorios      String?              @db.Text
  categorias_modelos categorias_modelos[]
  colores_modelos    colores_modelos[]
  leads              leads[]
  anios              anios?               @relation(fields: [idanios], references: [idanios], onDelete: NoAction, onUpdate: NoAction, map: "FK_MODELO_ANIOS")
  starservice        starservice[]
  versiones          versiones[]

  @@index([idanios], map: "FK_MODELO_ANIOS_idx")
}

model versiones {
  idversiones Int      @id @default(autoincrement())
  idmodelos   Int?
  nombre      String?  @db.Text
  precio      Decimal? @db.Decimal(10, 2)
  status      Int?
  modelos     modelos? @relation(fields: [idmodelos], references: [idmodelos], onDelete: NoAction, onUpdate: NoAction, map: "FK_VERSIONES_MODELOS")

  @@index([idmodelos], map: "FK_VERSIONES_MODELOS_idx")
}

model colores {
  idcolores       Int               @id @default(autoincrement())
  nombre          String?           @db.Text
  status          Int?
  created_at      DateTime?         @default(now()) @db.DateTime(0)
  updated_at      DateTime?         @default(now()) @db.DateTime(0)
  colores_modelos colores_modelos[]
}

model colores_modelos {
  idcolores_modelos Int      @id @default(autoincrement())
  idcolores         Int?
  idmodelos         Int?
  url               String?  @db.Text
  status            Int?
  colores           colores? @relation(fields: [idcolores], references: [idcolores], onDelete: NoAction, onUpdate: NoAction, map: "FK_COLORES_MODELOS_COLORES")
  modelos           modelos? @relation(fields: [idmodelos], references: [idmodelos], onDelete: NoAction, onUpdate: NoAction, map: "FK_COLORES_MODELOS_MODELOS")

  @@index([idcolores], map: "FK_COLORES_MODELOS_COLORES_idx")
  @@index([idmodelos], map: "FK_COLORES_MODELOS_MODELOS_idx")
}

model promociones {
  idpromociones Int       @id @default(autoincrement())
  urlImagen     String?   @db.Text
  urlDestino    String?   @db.Text
  fechaInicio   DateTime? @db.DateTime(0)
  fechaFin      DateTime? @db.DateTime(0)
  created_at    DateTime? @default(now()) @db.DateTime(0)
  updated_at    DateTime? @default(now()) @db.DateTime(0)
  status        Int?
}

model menu {
  idmenu         Int              @id @default(autoincrement())
  nombre         String?          @db.Text
  icono          String?          @db.Text
  enlace         String?          @db.Text
  status         Int?
  created_at     DateTime?        @default(now()) @db.DateTime(0)
  updated_at     DateTime?        @default(now()) @db.DateTime(0)
  funciones_menu funciones_menu[]
}

model agencias {
  idagencias      Int            @id @default(autoincrement())
  nombre          String?        @db.Text
  nombreCorto     String?        @db.Text
  direccion       String?        @db.Text
  correo          String?        @db.Text
  reenvioCorreos  String?        @db.Text
  telefonoUno     String?        @db.Text
  telefonoDos     String?        @db.Text
  telefonoTres    String?        @db.Text
  whatsappUno     String?        @db.Text
  whatsappDos     String?        @db.Text
  whatsappTres    String?        @db.Text
  facebookUrl     String?        @db.Text
  instagramUrl    String?        @db.Text
  xUrl            String?        @db.Text
  urlGoogleMaps   String?        @db.Text
  urlSitio        String?        @db.Text
  status          Int            @default(0)
  created_at      DateTime?      @default(now()) @db.DateTime(0)
  updated_at      DateTime?      @default(now()) @db.DateTime(0)
  idtiposagencias Int?
  seekop_id       String?        @db.VarChar(45)
  tiposagencias   tiposagencias? @relation(fields: [idtiposagencias], references: [idtiposagencias], onDelete: NoAction, onUpdate: NoAction, map: "FK_agencias_tipos_agencias")
  leads           leads[]

  @@index([idtiposagencias], map: "FK_agencias_tipos_agencias_idx")
}

model leads {
  idlead                  Int                 @id @default(autoincrement())
  idmodelos               Int?
  idtiposrazoncontacto    Int?
  nombres                 String?             @db.Text
  apellidos               String?             @db.Text
  correoelectronico       String?             @db.Text
  telefono                String?             @db.VarChar(10)
  fechaPreferenteContacto DateTime?           @db.Date
  idagencias              Int?
  notas                   String?             @db.Text
  created_at              DateTime?           @default(now()) @db.DateTime(0)
  updated_at              DateTime?           @default(now()) @db.DateTime(0)
  status                  Int?                @default(0)
  agencias                agencias?           @relation(fields: [idagencias], references: [idagencias], onDelete: NoAction, onUpdate: NoAction, map: "fk_leads_agencias")
  modelos                 modelos?            @relation(fields: [idmodelos], references: [idmodelos], onDelete: NoAction, onUpdate: NoAction, map: "fk_leads_modelos")
  tiposrazoncontacto      tiposrazoncontacto? @relation(fields: [idtiposrazoncontacto], references: [idtiposrazoncontacto], onDelete: NoAction, onUpdate: NoAction, map: "fk_leads_tiposrazoncontacto")

  @@index([idagencias], map: "fk_leads_agencias_idx")
  @@index([idmodelos], map: "fk_leads_modelos_idx")
  @@index([idtiposrazoncontacto], map: "fk_leads_tiposrazoncontacto_idx")
}

model tiposrazoncontacto {
  idtiposrazoncontacto Int       @id @default(autoincrement())
  nombre               String?   @db.Text
  status               Int?
  created_at           DateTime? @default(now()) @db.DateTime(0)
  updated_at           DateTime? @default(now()) @db.DateTime(0)
  originType           String?   @db.VarChar(45)
  leads                leads[]
}

model usuarios {
  idusuario       Int       @id @default(autoincrement())
  nombre          String?   @db.VarChar(1000)
  apellidopaterno String?   @db.VarChar(1000)
  apellidomaterno String?   @db.VarChar(1000)
  email           String?   @db.VarChar(1000)
  contrasena      String?   @db.VarChar(1000)
  creation_date   DateTime? @default(now()) @db.DateTime(0)
  update_date     DateTime? @default(now()) @db.DateTime(0)
  activacion      String?   @db.VarChar(1000)
  cambiopassword  String?   @db.VarChar(1000)
  status          Int?
}

model tiposagencias {
  idtiposagencias Int        @id @default(autoincrement())
  nombre          String?    @db.VarChar(100)
  created_at      DateTime?  @default(now()) @db.DateTime(0)
  updated_at      DateTime?  @default(now()) @db.DateTime(0)
  status          Int?
  agencias        agencias[]
}

model funciones_menu {
  idfunciones_menu Int       @id @default(autoincrement())
  idmenu           Int?
  nombre           String?   @db.VarChar(45)
  slug             String?   @db.VarChar(45)
  status           Int?
  created_at       DateTime? @default(now()) @db.DateTime(0)
  updated_at       DateTime? @default(now()) @db.DateTime(0)
  menu             menu?     @relation(fields: [idmenu], references: [idmenu], onDelete: NoAction, onUpdate: NoAction, map: "fk_funciones_menu_menu")

  @@index([idmenu], map: "fk_funciones_menu_menu_idx")
}

model sicop {
  idsicop       Int       @id @default(autoincrement())
  json          Json?
  created_at    DateTime? @db.DateTime(0)
  updated_at    DateTime? @db.DateTime(0)
  status        Int?
  responsesicop String?   @db.LongText
  responsemail  Json?
  urlSolicitud  String?   @db.LongText
}

model starservice {
  idstarservice Int       @id @default(autoincrement())
  nombre        String?   @db.VarChar(200)
  descripcion   String?   @db.LongText
  iframe        String?   @db.LongText
  status        Int?
  created_at    DateTime? @default(now()) @db.DateTime(0)
  updated_at    DateTime? @default(now()) @db.DateTime(0)
  idmodelos     Int?
  orden         Int?
  modelos       modelos?  @relation(fields: [idmodelos], references: [idmodelos], onDelete: NoAction, onUpdate: NoAction, map: "star_service_modelos")

  @@index([idmodelos], map: "star_service_modelos_idx")
}

model categoriaauto {
  idcategoriaauto    Int                  @id @default(autoincrement())
  nombre             String?              @db.VarChar(300)
  status             Int?
  created_at         DateTime?            @default(now()) @db.DateTime(0)
  updated_at         DateTime?            @default(now()) @db.DateTime(0)
  categorias_modelos categorias_modelos[]
}

model categorias_modelos {
  idcategorias_modelos Int            @id @default(autoincrement())
  idmodelos            Int?
  idcategoriaauto      Int?
  status               Int?
  created_at           DateTime?      @default(now()) @db.DateTime(0)
  updated_at           DateTime?      @default(now()) @db.DateTime(0)
  categoriaauto        categoriaauto? @relation(fields: [idcategoriaauto], references: [idcategoriaauto], onDelete: NoAction, onUpdate: NoAction, map: "categorias_modelos_categoria_fk")
  modelos              modelos?       @relation(fields: [idmodelos], references: [idmodelos], onDelete: NoAction, onUpdate: NoAction, map: "categorias_modelos_modelos_fk")

  @@index([idcategoriaauto], map: "categorias_modelos_categoria_fk_idx")
  @@index([idmodelos], map: "categorias_modelos_fk_idx")
}
